<!--
    This configuration file is required for deploying a Next.js application on Windows Server with IIS.
    It enables IIS to act as a reverse proxy, forwarding incoming web requests to the running Next.js application.
-->
<configuration>
    <system.webServer>
        <handlers>
            <!-- 
                This handler entry is crucial for the reverse proxy functionality.
                It specifies that the iisnode module will handle incoming requests.
            -->
            <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
        </handlers>

        <!-- 
            URL Rewrite rules are the core of the reverse proxy setup.
            This rule intercepts all incoming requests and rewrites their URL to point to the local Next.js server.
        -->
        <rewrite>
            <rules>
                <rule name="NextJsProxy" stopProcessing="true">
                    <match url=".*" />
                    <conditions>
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                    </conditions>
                    <!-- 
                        The action rewrites the URL to http://localhost:3000/, which is where the Next.js app
                        is expected to be running via PM2. The {R:0} appends the original request path.
                    -->
                    <action type="Rewrite" url="http://localhost:3000/{R:0}" />
                </rule>
            </rules>
        </rewrite>

        <!-- 
            This section is necessary for iisnode to function correctly.
            It prevents IIS from trying to handle WebSocket connections directly,
            allowing them to be passed through to the Node.js application.
        -->
        <webSocket enabled="false" />

    </system.webServer>
</configuration>

