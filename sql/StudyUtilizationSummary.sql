CREATE TABLE dbo.StudyUtilizationSummary (
    -- ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Group By
    ptn_id NVARCHAR(64) NOT NULL,
    ptn_name NVARCHAR(255),
    accession_number NVARCHAR(64) NOT NULL,
    study_desc NVARCHAR(255),
    study_date INT NOT NULL, -- üëà ‡πÉ‡∏ä‡πâ INT YYYYMMDD
    study_time INT,         -- üëà ‡πÉ‡∏ä‡πâ INT HHMMSS
    modality NVARCHAR(16) NOT NULL,
    source_ae NVARCHAR(64) NOT NULL,
    
    -- ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Aggregate (‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì)
    study_count INT,
    image_count INT,
    total_size_bytes BIGINT,

    -- (Optional) ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    last_updated DATETIME DEFAULT GETDATE(), 

    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á Primary Key ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞ Merge ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ
    -- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß Unique ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    CONSTRAINT PK_StudyUtilizationSummary PRIMARY KEY CLUSTERED 
    (
        study_date, accession_number, modality, source_ae, ptn_id
    )
);

-- (Optional but Recommended) ‡∏™‡∏£‡πâ‡∏≤‡∏á Index ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö WHERE clause
CREATE NONCLUSTERED INDEX IX_StudyUtilizationSummary_Filter 
ON dbo.StudyUtilizationSummary (study_date, source_ae, modality);

//-------------------------------------------------------------
-- Stored Procedure: sp_UpdateUtilizationSummary
-- ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á StudyUtilizationSummary
-- ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå:
--   @StartDate INT - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYYMMDD
--   @EndDate INT - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYYMMDD
-------------------------------------------------------------

CREATE PROCEDURE sp_UpdateUtilizationSummary
    @StartDate INT,
    @EndDate INT
AS
BEGIN
    SET NOCOUNT ON;

    PRINT 'Starting MERGE for StudyUtilizationSummary...';

    -- ‡πÉ‡∏ä‡πâ MERGE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    MERGE INTO dbo.StudyUtilizationSummary AS T -- T = Target
    USING (
        -- ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Query ‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡∏™‡πà‡∏ß‡∏ô GroupedData)
        -- ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
        SELECT
            p.ptn_id,
            p.ptn_name,
            s.accession_number,
            s.study_desc,
            s.study_date, -- üëà ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô INT YYYYMMDD
            s.study_time, -- üëà ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô INT HHMMSS
            se.modality,
            i.source_ae,
            COUNT(DISTINCT s.study_uid_id) as study_count,
            COUNT(i.instance_uid) as image_count,
            SUM(CAST(i.file_size AS BIGINT)) as total_size_bytes 
        FROM patient1 p
        JOIN study1 s ON p.ptn_id_id = s.ptn_id_id
        JOIN series1 se ON s.study_uid_id = se.study_uid_id
        JOIN image1 i ON se.series_uid_id = i.series_uid_id
        -- ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
        WHERE s.study_date BETWEEN @StartDate AND @EndDate 
        GROUP BY
            p.ptn_id, p.ptn_name, s.accession_number, s.study_desc, 
            s.study_date, s.study_time, se.modality, i.source_ae
    
    ) AS S -- S = Source
    ON (
        -- ‡∏£‡∏∞‡∏ö‡∏∏ Key ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Target ‡πÅ‡∏•‡∏∞ Source
        T.study_date = S.study_date AND
        T.accession_number = S.accession_number AND
        T.modality = S.modality AND
        T.source_ae = S.source_ae AND
        T.ptn_id = S.ptn_id
    )

    -- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô (‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß) -> ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    WHEN MATCHED THEN
        UPDATE SET
            T.ptn_name = S.ptn_name,
            T.study_desc = S.study_desc,
            T.study_time = S.study_time,
            T.study_count = S.study_count,
            T.image_count = S.image_count,
            T.total_size_bytes = S.total_size_bytes,
            T.last_updated = GETDATE()

    -- ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô Target (‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà) -> ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°
    WHEN NOT MATCHED BY TARGET THEN
        INSERT (
            ptn_id, ptn_name, accession_number, study_desc, study_date, 
            study_time, modality, source_ae, 
            study_count, image_count, total_size_bytes
        )
        VALUES (
            S.ptn_id, S.ptn_name, S.accession_number, S.study_desc, S.study_date, 
            S.study_time, S.modality, S.source_ae, 
            S.study_count, S.image_count, S.total_size_bytes
        );
    
    -- (Optional) ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà 3: ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á (Source) ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏•‡πâ‡∏ß
    -- WHEN NOT MATCHED BY SOURCE AND T.study_date BETWEEN @StartDate AND @EndDate THEN
    --     DELETE;

    PRINT 'MERGE completed.';

END;
GO



/-------------------------------------------------------------`
-- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Stored Procedure
-- EXEC sp_UpdateUtilizationSummary @StartDate = 20240101, @EndDate = 20240630;
-------------------------------------------------------------/
-- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYYMMDD) ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô schedule job ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á

DECLARE @Yesterday INT = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE() - 1, 112));
EXEC sp_UpdateUtilizationSummary @StartDate = @Yesterday, @EndDate = @Yesterday;

-- ‡∏•‡∏≠‡∏á Query ‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
SELECT TOP 100 * FROM dbo.StudyUtilizationSummary ORDER BY study_date DESC;

//-------------------------------------------------------------
-- ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Backfill ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
-------------------------------------------------------------

SET NOCOUNT ON;

PRINT 'Starting Historical Backfill...';

-- 1. üëà ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (‡πÄ‡∏ä‡πà‡∏ô 1 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2020)
DECLARE @LoopDate DATE = '2020-01-01'; 

-- 2. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (‡∏Ñ‡∏∑‡∏≠ "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô‡∏ô‡∏µ‡πâ")
DECLARE @StopDate DATE = GETDATE() - 1; 

WHILE @LoopDate <= @StopDate
BEGIN
    -- 3. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (INT YYYYMMDD)
    DECLARE @StartDateINT INT = CONVERT(INT, CONVERT(VARCHAR(8), DATEFROMPARTS(YEAR(@LoopDate), MONTH(@LoopDate), 1), 112));
    
    -- 4. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (INT YYYYMMDD)
    DECLARE @EndDateINT INT = CONVERT(INT, CONVERT(VARCHAR(8), EOMONTH(@LoopDate), 112));

    -- 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ‡∏ñ‡πâ‡∏≤‡∏£‡∏≠‡∏ö‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÄ‡∏Å‡∏¥‡∏ô "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    --    ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô" ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏ó‡∏ô
    DECLARE @YesterdayINT INT = CONVERT(INT, CONVERT(VARCHAR(8), @StopDate, 112));
    IF @EndDateINT > @YesterdayINT
    BEGIN
        SET @EndDateINT = @YesterdayINT;
    END

    -- 6. ‡∏û‡∏¥‡∏°‡∏û‡πå Log ‡∏ö‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (‡∏î‡∏π‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö Messages)
    PRINT 'Processing data from ' + CAST(@StartDateINT AS VARCHAR) + ' to ' + CAST(@EndDateINT AS VARCHAR) + '...';

    -- 7. ‡∏£‡∏±‡∏ô SP ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÜ
    BEGIN TRY
        EXEC dbo.sp_UpdateUtilizationSummary @StartDate = @StartDateINT, @EndDate = @EndDateINT;
        PRINT '...Done.';
    END TRY
    BEGIN CATCH
        -- ‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î Error ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå Error ‡πÅ‡∏•‡∏∞‡∏´‡∏¢‡∏∏‡∏î Loop
        PRINT '*** ERROR Processing data from ' + CAST(@StartDateINT AS VARCHAR) + ' to ' + CAST(@EndDateINT AS VARCHAR) + ' ***';
        PRINT ERROR_MESSAGE();
        BREAK;
    END CATCH

    -- 8. ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    SET @LoopDate = DATEADD(MONTH, 1, @LoopDate);
END

PRINT 'Historical Backfill Complete.';

//-------------------------------------------------------------
-- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå sp_UpdateUtilizationSummary
-- ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç SELECT ‡πÅ‡∏•‡∏∞ GROUP BY ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
-------------------------------------------------------------
ALTER PROCEDURE sp_UpdateUtilizationSummary
    @StartDate INT,
    @EndDate INT
AS
BEGIN
    SET NOCOUNT ON;

    PRINT 'Starting MERGE for StudyUtilizationSummary...';

    MERGE INTO dbo.StudyUtilizationSummary AS T
    USING (
        -- [FIX] ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç SELECT ‡πÅ‡∏•‡∏∞ GROUP BY
        SELECT
            p.ptn_id,
            MAX(p.ptn_name) as ptn_name,         -- üëà [FIX] ‡πÉ‡∏ä‡πâ MAX()
            s.accession_number,
            MAX(s.study_desc) as study_desc,     -- üëà [FIX] ‡πÉ‡∏ä‡πâ MAX()
            s.study_date,
            MAX(s.study_time) as study_time,     -- üëà [FIX] ‡πÉ‡∏ä‡πâ MAX()
            se.modality,
            i.source_ae,
            COUNT(DISTINCT s.study_uid_id) as study_count,
            COUNT(i.instance_uid) as image_count,
            SUM(CAST(i.file_size AS BIGINT)) as total_size_bytes 
        FROM patient1 p
        JOIN study1 s ON p.ptn_id_id = s.ptn_id_id
        JOIN series1 se ON s.study_uid_id = se.study_uid_id
        JOIN image1 i ON se.series_uid_id = i.series_uid_id
        WHERE s.study_date BETWEEN @StartDate AND @EndDate 
        
        -- [FIX] GROUP BY ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô Primary Key
        GROUP BY
            p.ptn_id, 
            s.accession_number, 
            s.study_date, 
            se.modality, 
            i.source_ae
    
    ) AS S
    ON (
        -- ON clause ‡∏¢‡∏±‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° (‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö PK)
        T.study_date = S.study_date AND
        T.accession_number = S.accession_number AND
        T.modality = S.modality AND
        T.source_ae = S.source_ae AND
        T.ptn_id = S.ptn_id
    )

    -- WHEN MATCHED (‡∏¢‡∏±‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    WHEN MATCHED THEN
        UPDATE SET
            T.ptn_name = S.ptn_name,
            T.study_desc = S.study_desc,
            T.study_time = S.study_time,
            T.study_count = S.study_count,
            T.image_count = S.image_count,
            T.total_size_bytes = S.total_size_bytes,
            T.last_updated = GETDATE()

    -- WHEN NOT MATCHED (‡∏¢‡∏±‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
    WHEN NOT MATCHED BY TARGET THEN
        INSERT (
            ptn_id, ptn_name, accession_number, study_desc, study_date, 
            study_time, modality, source_ae, 
            study_count, image_count, total_size_bytes
        )
        VALUES (
            S.ptn_id, S.ptn_name, S.accession_number, S.study_desc, S.study_date, 
            S.study_time, S.modality, S.source_ae, 
            S.study_count, S.image_count, S.total_size_bytes
        );
    
    PRINT 'MERGE completed.';

END;
GO
//-------------------------------------------------------------
-- ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á StudyUtilizationSummary
-------------------------------------------------------------
TRUNCATE TABLE dbo.StudyUtilizationSummary;
-------------------------------------------------------------